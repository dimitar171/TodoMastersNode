
const Todo = require('./../models/todoModel');

exports.createTodo = async (req, res) => {
    try {
        await Todo.create(req.body);
        res.redirect('/todos');
    } catch (err) {
        res.status(400).json({
            status: 'fails',
            message: 'Invalid data sent!'
        });
    }
};


exports.getAllTodos =  (req, res, next) => {
    var perPage = req.query.pageSize ||3
    var page = req.query.page || 1
    var checked= req.query.checked || 0
    var searched=req.query.searchString || ''
    console.log(searched)

    Todo
        .find({})
        .skip((perPage * page) - perPage)
        .limit(perPage)
        .exec(function (err, todos) {
            Todo.count().exec(function (err, count) {
                if (err) return next(err)
                res.render('todos', {
                    todos: todos.filter(todo=>todo.title.includes(searched) && todo.status== checked),
                    current: page,
                    pages: Math.ceil(count / perPage)
                })
            })
        })
}

exports.getCreateTodo = async (req, res) => {
    try {
        res.render('create');
    } catch (err) {
        res.status(404).json({
            status: 'fail',
            message: err
        });
    }
};

exports.getTodo = async (req, res) => {

    try {
        const todos = await Todo.findById(req.params.id);
        res.render('details', {
            todos,
        });
    } catch (err) {
        res.status(404).json({
            status: 'fail',
            message: err
        });
    }
};

exports.getEditTodo = async (req, res) => {

    try {
        const todos = await Todo.findById(req.params.id);
        res.render('edit', {
            todos,
        });
    } catch (err) {
        res.status(404).json({
            status: 'fail',
            message: err
        });
    }
};

exports.updateTodo = async (req, res) => {

    try {
        const todos = await Todo.findByIdAndUpdate(req.params.id, req.body, {
            new: true,
            runValidators: true
        });
        const { id } = req.params
        const { status } = req.body
        console.log(id, status)
        res.redirect('/todos');
    } catch (err) {
        res.status(404).json({
            status: 'fail',
            message: err
        });
    }
};

exports.deleteTodo = async (req, res) => {

    try {
        await Todo.findByIdAndDelete(req.params.id);
        res.redirect('/todos');
    } catch (err) {
        res.status(404).json({
            status: 'fail',
            message: err
        });
    }
};
